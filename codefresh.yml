# More examples of Codefresh YAML can be found at
# https://codefresh.io/docs/docs/yaml-examples/examples/

version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "clone"
  - "test"
  - "release"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    # CF_BRANCH value is auto set when pipeline is triggered
    # Learn more at codefresh.io/docs/docs/codefresh-yaml/variables/
    revision: "${{CF_BRANCH}}"
    git: "github"
    stage: "clone"

  test:
    stage: "test"
    type: parallel
    steps:
      test_lib:
        title: "Test Surround Library"
        type: "freestyle" # Run any command
        image: "python:3.8.10" # The image in which command will be executed
        working_directory: "${{clone}}"
        commands:
          # Go inside the surround library
          - cd surround

          # Remove generated tox directory
          - rm -rf .tox

          # Install tox
          - pip install tox==3.20.1

          # Run tests through tox
          - tox

      test_cli:
        title: "Test Surround CLI"
        type: "freestyle" # Run any command
        image: "python:3.8.10" # The image in which command will be executed
        working_directory: "${{clone}}"
        commands:
          # Go inside the cli
          - cd surround_cli

          # Remove generated tox directory
          - rm -rf .tox

          # Install tox
          - pip install tox==3.20.1

          # Run tests through tox
          #- tox  # Skip tox test for now since it is running forever

          # Run examples
          - pip install ../surround
          - python setup.py install
          - cd ..
          - find examples/ -iname "*.py" | xargs pylint
          - ls examples/ | xargs -n 1 -I '{}' python3 examples/'{}'/main.py

  release:
    stage: "release"
    type: parallel
    steps:
      release_lib:
        title: "Release surround lib to PYPI"
        type: "freestyle"
        image: "python:3.7.5" # The image in which command will be executed
        working_directory: "${{clone}}" # Running command where code cloned
        commands:
          - cd surround

          # Remove generated files from last release
          - rm -rf dist

          # Install required packages
          - python3 -m pip install --user --upgrade setuptools wheel twine

          # Setup Pypi config
          - echo "[pypi]" > ~/.pypirc
          - echo "repository=https://upload.pypi.org/legacy/" >> ~/.pypirc
          - echo "username=${{PYPI_USERNAME}}" >> ~/.pypirc
          - echo "password=${{PYPI_PASSWORD}}" >> ~/.pypirc

          # Build package
          - python3 setup.py sdist bdist_wheel

          # Upload package for distribution
          - python3 -m twine upload --repository pypi dist/*
        when:
            condition:
              all:
                isMainRepo: '"${{CF_REPO_OWNER}}" == "a2i2"'
                isReleaseBranch: 'match("${{CF_BRANCH}}", "surround-v([0-9]+)\.([0-9]+)\.([0-9]+)?$", false) == true'

      release_cli:
        title: "Release surround cli to PYPI"
        type: "freestyle"
        image: "python:3.7.5" # The image in which command will be executed
        working_directory: "${{clone}}" # Running command where code cloned
        commands:
          - cd surround_cli

          # Remove generated files from last release
          - rm -rf dist

          # Install required packages
          - python3 -m pip install --user --upgrade setuptools wheel twine

          # Setup Pypi config
          - echo "[pypi]" > ~/.pypirc
          - echo "repository=https://upload.pypi.org/legacy/" >> ~/.pypirc
          - echo "username=${{PYPI_USERNAME}}" >> ~/.pypirc
          - echo "password=${{PYPI_PASSWORD}}" >> ~/.pypirc

          # Build package
          - python3 setup.py sdist bdist_wheel

          # Upload package for distribution
          - python3 -m twine upload --repository pypi dist/*
        when:
            condition:
              all:
                isMainRepo: '"${{CF_REPO_OWNER}}" == "a2i2"'
                isReleaseBranch: 'match("${{CF_BRANCH}}", "surround-cli-v([0-9]+)\.([0-9]+)\.([0-9]+)?$", false) == true'
